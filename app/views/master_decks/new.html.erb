
<div class="col-md-8 col-12 mr-auto ml-auto">
            <!--      Wizard container        -->
            <div class="wizard-container">
              <div class="card card-wizard" data-color="rose" id="wizardProfile">
                <%= form_with model: @master_deck, class: "form", url: "/decks" do |f| %>
                  <!--        You can switch " data-color="primary" "  with one of the next bright colors: "green", "orange", "red", "blue"       -->
                  <div class="card-header text-center">
                    <h3 class="card-title">
                      <i class="fad fa-layer-plus"></i> Create a Deck
                    </h3>
                    <h5 class="card-description">Fill in this basic deck information to get started. You can change it all later.</h5>
                  </div>
                  <div class="wizard-navigation">
                    <ul class="nav nav-pills">
                      <li class="nav-item">
                        <a class="nav-link active" href="#about" data-toggle="tab" role="tab">
                          About the Deck
                        </a>
                      </li>
                      <li class="nav-item">
                        <a class="nav-link" href="#account" data-toggle="tab" role="tab">
                          Deck List
                        </a>
                      </li>
                    </ul>
                  </div>
                  <div class="card-body">
                    <div class="tab-content">
                      <div class="tab-pane active" id="about">
                        <h5 class="info-text"> Let's start with the basic information </h5>
                        <div class="row">
                          <div class="col-sm-12">
                          <div class="form-group">
                            <%= f.label "Deck Name:", for: :name %>
                            <%= f.text_field :name, class: "form-control" %>
                          </div>
                          </div>
                          <div class="col-sm-12">
                          <div class="form-group">
                            <%= f.label "Deck Type:", for: :deck_type %>
                            <!-- TODO: add all the different deck types -->
                            <%= f.select :deck_type, options_for_select([["Commander", "commander"], ["Modern", "modern"]]), 
                                        {}, {:class => 'selectpicker', :data => { :style => 'btn btn-primary btn-round' }} %>
                          </div>
                          </div>
                          <div class="col-sm-12">
                          <div class="form-group">
                            <div class="togglebutton">
                              <label>
                                <%= f.check_box :is_public, checked: current_user.user_profile.default_deck_visibility? %>
                                <span class="toggle"></span>
                                  <%= tag.span("Public Deck", class: "text-success label-on") %>
                                  <%= tag.span("Private Deck", class: "text-warning label-off") %>
                              </label>
                            </div>
                          </div>
                          </div>
                          <div class="col-sm-12">
                          <div class="form-group">
                            <%= f.label "Deck Description:", for: :description %>
                            <%= f.text_area :description, class: "form-control" %>
                            <!-- TODO: add link to help article about this -->
                            <p><small class="text-muted">Supports Markdown and MTG tags</small></p>
                          </div>
                          </div>
                        </div>
                      </div>
                      <div class="tab-pane" id="account">
                        <h5 class="info-text"> Upload a deck list in CSV format, or paste a card list in the text box below.</h5>
                        <div class="alert alert-default" role="alert">
                          This is completely optional. There's a nice deck editor for you to use with interactive card search once your deck is created.
                        </div>
                        <div class="row justify-content-center">
                          <div class="col-sm-12">
                              <div class="form-group form-file-upload form-file-multiple">
                                <input type="file" multiple="" class="inputFileHidden">
                                <div class="input-group">
                                    <input type="text" class="form-control inputFileVisible" placeholder="Deck List CSV file">
                                    <span class="input-group-btn">
                                        <button type="button" class="btn btn-fab btn-round btn-primary">
                                            <i class="material-icons">attach_file</i>
                                        </button>
                                    </span>
                                </div>
                              
                            </div>
                            <div class="form-group"></div>
                            <div class="col-sm-12">
                              <div class="form-group">
                                <%= f.label "Card List:", for: :card_list %>
                                <%= f.text_area :card_list, class: "form-control", rows: "10" %>
                                <p><small>Qty Card Name (Card Set)<br />ex: </small><code class="text-muted">1x Liliana Vess (DD3)</code></p>
                              </div>
                              </div>
                          </div>
                        </div>
                      </div>
                
                    </div>
                  </div>
                  <div class="card-footer">
                    <div class="mr-auto">
                      <input type="button" class="btn btn-previous btn-fill btn-default btn-wd disabled" name="previous" value="Previous">
                    </div>
                    <div class="ml-auto">
                      <input type="button" class="btn btn-next btn-fill btn-rose btn-wd" name="next" value="Next">
                      <%= f.submit "Create", class: "btn btn-finish btn-fill btn-rose btn-wd", style: "display: none;" %>
                    </div>
                    <div class="clearfix"></div>
                  </div>
                <% end %>
              </div>
            </div>
            <!-- wizard container -->
            </div>
            
            
<% content_for :page_script do %>

$(document).ready(function() {
      // Initialise the wizard
      deckbrew.initMaterialWizard();
      setTimeout(function() {
        $('.card.card-wizard').addClass('active');
      }, 600);
    });
    
  // FileInput
    $('.form-file-simple .inputFileVisible').click(function() {
      $(this).siblings('.inputFileHidden').trigger('click');
    });

    $('.form-file-simple .inputFileHidden').change(function() {
      var filename = $(this).val().replace(/C:\\fakepath\\/i, '');
      $(this).siblings('.inputFileVisible').val(filename);
    });

    $('.form-file-multiple .inputFileVisible, .form-file-multiple .input-group-btn').click(function() {
      $(this).parent().parent().find('.inputFileHidden').trigger('click');
      $(this).parent().parent().addClass('is-focused');
    });

    $('.form-file-multiple .inputFileHidden').change(function() {
      var names = '';
      for (var i = 0; i < $(this).get(0).files.length; ++i) {
        if (i < $(this).get(0).files.length - 1) {
          names += $(this).get(0).files.item(i).name + ',';
        } else {
          names += $(this).get(0).files.item(i).name;
        }
      }
      $(this).siblings('.input-group').find('.inputFileVisible').val(names);
    });

    $('.form-file-multiple .btn').on('focus', function() {
      $(this).parent().siblings().trigger('focus');
    });

    $('.form-file-multiple .btn').on('focusout', function() {
      $(this).parent().siblings().trigger('focusout');
    });
    
<% end %>