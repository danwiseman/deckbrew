
        <% 
        # Create a hash of the branches where they need to go.
        branch_hash = Hash.new{|h,k| h[k] = [] }
        for branch_me in @master_deck.branches
            # add the branch to the proper spot on the hash
            branch_hash[(branch_me.branched_from['source_deck'].nil?) ? 0 : branch_me.branched_from['source_deck']].push(branch_me.id)
            # now create a line that can be referenced by the JS
            %>
            
        <% end %>
    <div id="graph-container"></div>





<% content_for :page_script do %>


    // Get the graph container HTML element.
    const graphContainer = document.getElementById("graph-container");
    
  

    // Instantiate the graph.
    const gitgraph = GitgraphJS.createGitgraph(graphContainer);
 
    
    // Simulate git commands with Gitgraph API.
    const main = gitgraph.branch("main");
    main.commit("Initial deck creation");
    
    <% for branch_me in @master_deck.branches
            unless branch_me.source_branch == 0
    %>
                const <%= branch_me.slug.gsub("-","") %> = <%= Branch.find(branch_me.source_branch).slug.gsub("-","") %>.branch("<%= branch_me.name %>");
                <%= branch_me.slug.gsub("-","") %>.commit("");
    <%     end 
    end   %>
    
    ///develop.commit("Add TypeScript");

    //const aFeature = develop.branch("a-feature");
   // aFeature
     // .commit("Make it work")
    //  .commit("Make it right")
      //.commit("Make it fast");

    //develop.merge(aFeature);
    //develop.commit("Prepare v1");

    //master.merge(develop).tag("v1.0.0");


<% end %>